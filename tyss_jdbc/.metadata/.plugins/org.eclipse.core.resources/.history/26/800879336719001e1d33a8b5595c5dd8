package com.tyss;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Types;

public class ProductDao {
	public  Connection getConnection() {
		Connection con = null;
		try {
			Class.forName("org.postgresql.Driver");
			con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/food?user=postgres&password=root");
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return con;
	}

	public void saveProduct(Product product) {
		// Save Product
		Connection con = getConnection();
		try {
			CallableStatement cs=con.prepareCall("call save_product(?,?,?,?,?,?)");
			cs.setInt(1, product.getId());
			cs.setString(2, product.getName());
			cs.setString(3, product.getType());
			cs.setString(4, product.getDescription());
			cs.setString(5, product.getAvailability());
			cs.setDouble(6, product.getPrice());
			cs.execute();
		} catch (SQLException e) {
			e.printStackTrace();
		}

	}

	public Product findProductById(int id) {
		// Find Product By Id And return the product if Exist
		Connection con=getConnection();
		try {
			CallableStatement cs=con.prepareCall("call find_product(?,?,?,?,?,?)");
			cs.setInt(1, id);
			cs.registerOutParameter(1, Types.INTEGER);
			cs.registerOutParameter(2, Types.VARCHAR);
			cs.registerOutParameter(3, Types.VARCHAR);
			cs.registerOutParameter(4, Types.VARCHAR);
			cs.registerOutParameter(5, Types.VARCHAR);
			cs.registerOutParameter(6, Types.DOUBLE);
			cs.execute();
			Product p=new Product();
			System.out.println("Name : "+cs.getString(2));
			p.setId(cs.getInt(1));
			p.setName(cs.getString(2));
			p.setType(cs.getString(3));
			p.setDescription(cs.getString(4));
			p.setAvailability(cs.getString(5));
			p.setPrice(cs.getDouble(6));
			return p;
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return null;
	}

	public Product updateProductById(Product product) {
		// Update Product By Id And return the Updated product
		Connection con = getConnection();
		try {
			CallableStatement cs=con.prepareCall("call update_product(?,?,?,?,?,?)");
			cs.setInt(1, product.getId());
			cs.setString(2, product.getName());
			cs.setString(3, product.getType());
			cs.setString(4, product.getDescription());
			cs.setString(5, product.getAvailability());
			cs.setDouble(6, product.getPrice());
			cs.execute();
			System.out.println("updated");
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return product;
	}

	public void removeProductById(int id) {
		// Find Product By Id And Remove the product if Exist remove_product
		Connection con=getConnection();
		try {
			CallableStatement cs=con.prepareCall("call remove_product(?)");
			cs.setInt(1, id);
			cs.execute();
			System.out.println("deleted");
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

}
